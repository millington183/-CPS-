/************************************************************************************
*  Copyright (c), 2004-2019, 北京中嵌凌云电子有限公司
*            All rights reserved.
*
* http:  www.embedarm.com
* Email: embedarm@126.com
*
* File name: EMB8626I_IOConfig.h
* Project  : STM32F1XX/4XX系列模块软件
* Processor: STM32F1XX/4XX
* Compiler : RealView MDK-ARM Compiler
* 
* Author:  EmbedARM
* Version: 1.00
* Date:    2018.10.1			
* Email:   EmbedARM@126.com
* 
* Description: 本文件是EMB8626I工控板IO端口功能, 客户可根据模块实际应用进行更改;
*
* Others: none;
*
* Function List:
*		
* History:
*   1. Author:       EmbedARM  
*	   Version: 	 0.90
*	   Date:         2012.1.1
*      Modification: none
*
*************************************************************************************/
#ifndef __PIONEER_IOCONFIG_H 
#define __PIONEER_IOCONFIG_H 

/************************************************************************************/
// 端口定义说明
/************************************************************************************/
/*
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| 产品型号 | 端口标号、类型及说明         |  1脚  |  2脚  |  3脚  |  4脚  |  5脚  |  6脚  |  7脚  |  8脚  |  9脚  |  10脚  |     备注                                                      |
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | J11 : DI1-DI8, 光电隔离输入  |  COM  |  DI1  |  DI2  |  DI3  |  DI4  |  DI5  |  DI6  |  DI7  |  DI8  |   -    | 由MCU IO口直接驱动                                            |
|          |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|  PIONEER | JP13: DO1-DO8 , 光电隔离输出 |  +OPT |  DO1  |  DO2  |  DO3  |  DO4  |  DO5  |  DO6  |  DO7  |  DO7  |   GND  | 由MCU IO口直接驱动入                                     |
|          |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP7: 4路RS232/TTL接口        |  GND  |  TX1  |  RX1  |  TX2  |  RX2  |  TX3  |  RX3  |  TX4  |  RX4   |   -    | TX1/2: RS232发送端口;RX1/2表示: RS232接收端口                 |
|          |                              |   地  | UART1转RS232  | UART2转RS232  | UART3转RS232  | UART4转RS232   |                                                               |
|          |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP16: UART6接口 RS232/TTL电平| GND   |  RX5  |  TX5  |   -   |   -   |   -   |   -   |   -   |   -   |   -    | TX6: UART6发送端口; RX5: UART6接收端口                     |
|          |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP10: 1路RS485接口,带光电隔离 |  A+   |   B-  |  GND  |   -   |   -   |   -   |   -   |   -   |    -  |   -    |UART6转RS485; GND,一般不接; RK1:断开                           |
|          |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP14: 电源接口, 9-26V输入    |  VDD  |  GND  |   -                                                            |                                        |
|          |-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
|          | JP26:NB-IoT                  |  UART6接口                                                                     |                                        |
|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
*/

/************************************************************************************/
// 引用外部头文件
/************************************************************************************/
#include "sys.h"

/************************************************************************************/
// DI输出端口定义
/************************************************************************************/
#define DI_NUM   8      // 定义DI输入数量 

// JP11 DI1-DI8定义:    J11->1脚(COM) 
#define DI1   PD8    // J11->2脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI2   PD9    // J11->3脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI3   PD10   // J11->4脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI4   PD11   // J11->5脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI5   PD12   // J11->6脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI6   PD13   // J11->7脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI7   PD14   // J11->8脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置
#define DI8   PD15   // J11->9脚, 可以产生中断, 参考EXTI0~EXTI19 输入中断配置


/************************************************************************************/
// DO输出端口定义
/************************************************************************************/
#define DO_NUM          8     // 定义DO输出端口数量 
// JP5 DO1-DO8定义:     JP5->1脚(+OPT) 
#define DO1   PE8    // JP5->2脚
#define DO2   PE9    // JP6->3脚
#define DO3   PE10    // JP6->4脚
#define DO4   PE11    // JP6->5脚
#define DO5   PE12   // JP6->6脚
#define DO6   PE13   // JP6->7脚
#define DO7   PE14   // JP6->8脚
#define DO8   PE15   // JP6->9脚
					 // JP6->10脚(GND)
// 以下2种模式只能选择一种
#define DO_OUT_PP     // 定义DO输出为推挽输出模式
//#define DO_OUT_OD     // 定义DO输出为开路输出模式


/************************************************************************************/
// LED/蜂鸣器/拨码开关/按键/其它端口定义
/************************************************************************************/

// JP18 IO定义
#define JP18_P5  PE1  // JP18第5脚
#define JP18_P7  PE2  // JP18第7脚
#define JP18_P8  PE3  // JP18第8脚  

// 蜂鸣器IO定义
#define ALARM    PE2

// 运行LED IO定义
#define RUN_LED  PA4


/************************************************************************************/
// UART(RS232/RS485)端口定义
/************************************************************************************/
// UART1(管脚)功能重映射设置: 转成RS232接口(JP7的TX1、RX1)
//#define UART1_REMAP      UART_REMAP_1    // UART1重映射1
#define UART1_TX         PA9             // 设置TX管脚, 对应JP3的1脚TX1
#define UART1_RX         PA10            // 设置RX管脚, 对应JP3的2脚RX1  

#define UART1_DIR        IO_NONE         // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART1_DIR_HL     0               // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART2(管脚)功能重映射设置: 转成RS232接口(JP7的TX2、RX2)
//#define UART2_REMAP      UART_REMAP_1    // UART2重映射1
#define UART2_TX         PA2             // 设置TX管脚, 对应JP3的3脚TX2
#define UART2_RX         PA3             // 设置RX管脚, 对应JP3的4脚RX2 
#define UART2_DIR        IO_NONE         // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART2_DIR_HL     0               // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART3(管脚)功能重映射设置: 转成RS232接口(JP7的TX3、RX3)
//#define UART3_REMAP      UART_REMAP_2     // UART3重映射2
#define UART3_TX         PB10             // 设置TX管脚
#define UART3_RX         PB11             // 设置RX管脚
#define UART3_DIR        IO_NONE             // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART3_DIR_HL     0                // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART4(管脚)功能重映射设置: 转成RS232接口(JP7的TX4、RX4)
//#define UART4_REMAP      UART_REMAP_0     // UART4没有重映射
#define UART4_TX         PC10             // 设置TX管脚
#define UART4_RX         PC11             // 设置RX管脚 
#define UART4_DIR        IO_NONE              // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART4_DIR_HL     0                // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART5(管脚)功能重映射设置: TLL接口(直连NB-IoT)
//#define UART5_REMAP      UART_REMAP_0     // UART5没有重映射
#define UART5_TX         PC12             // 设置TX管脚, 对应JP5的1脚TXD5
#define UART5_RX         PD2              // 设置RX管脚, 对应JP5的2脚RXD5  
#define UART5_DIR        IO_NONE          // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART5_DIR_HL     0                // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

// UART6(管脚)功能重映射设置: 转成RS485接口(J10的A+、B-)
//#define UART6_REMAP      UART_REMAP_0     // UART6没有重映射
#define UART6_TX         PC6              // 设置TX管脚, 对应JP5的1脚TXD6
#define UART6_RX         PD7              // 设置RX管脚, 对应JP5的2脚RXD6  
#define UART6_DIR        PC8          // 设置RS485方向控制IO, 没有转RS485接口则设置为IO_NONE
#define UART6_DIR_HL     0                // 定义RS485通信时接收数据时方向电平, 0: 低电平接收; 1: 高电平接收

/************************************************************************************/
// CAN端口定义
/************************************************************************************/
// CAN1(管脚)功能重映射设置: JP11的CANH、CANL
//#define CAN1_REMAP      CAN_REMAP_2    // CAN1重映射2
#define CAN1_TX         PD1            // CAN1设置TX管脚
#define CAN1_RX         PD0            // CAN1设置RX管脚 

/************************************************************************************/
// I2C管脚定义
/************************************************************************************/
// 板载EEPROM管脚定义(即I2C1引脚定义)
#define I2C1_SDA    PB9    // I2C1 SDA管脚
#define I2C1_SCL    PB8    // I2C1 SCL管脚

/************************************************************************************/
// SPI/SPI FLASH管脚定义
/************************************************************************************/
// SPI1引脚定义: 
//#define SPI1_REMAP  SPI_REMAP_1       // SPI1重映射1
#define SPI1_NSS    PA15              // SPI1_NSS管脚, 这个管脚就是板载SPI FLASH(AT45DB161或W25QXX)片选
#define SPI1_SCK    PB3               // SPI1_SCK管脚
#define SPI1_MISO   PB4               // SPI1_MOSI管脚
#define SPI1_MOSI   PB5               // SPI1_MISO管脚

// 板载SPI FLASH(W25QXX)片选定义
#define W25QXX_CS   PA15   

/************************************************************************************/
// SD卡管脚定义
/************************************************************************************/
// SD卡控制IO定义
//#define SD_CS       PD14
//#define SD_INR      PD15
//#define SD_PWR      PC8
//#define SD_WP       PC9 

#endif
/***********************************************************************************/
// 文件结束
/***********************************************************************************/
